	More on Lists

Methods:

-	list.append(x)
	-add an element to the end of the list. Equivalent to  a[len(a):] = [x].

-	list.extend(iterable)
	-extend the list by appending all the items from the iterable. Equivalent to a[len(a):] = iterable

-	list.insert(i,x)
	-insert an item at a given position. The first argument is the index of the element before which to insert, so a.insert(0, x) inserts at the front of the list		, and a.insert(len(a),x) is equivalent to a.append(x)

-	list.remove(x)
	-remove the first item from the list whose value is equal to x. It raises a ValueError if there is no such item

-	list.pop([i])
	-remove the item at the given position in the list, and return it. If no index is specified, a.pop() removes and returns the last item in the list.The square
	bracket around the i in the method signature denote that the parameter is optional, not that we should type square brackets at that position.

-	list.clear()
	-remove all items from the list. Equivalent to del a[:]

-	list.index(x[,start[,end]])
	-return zero-based index in the list of the first item whose value is equal to x. Raises a ValueError if there is no such item.
	The optional arguments start and end are interpreted as in the slice notation and are used to limit the search to particular subsequence of the list.
	The returned index is computed relative to the beginning of the sequence rather than the start argument.

 
-	list.count(x)
	-return the number of times x appears in the list.

-	list.sort(key=None, reverse=False)
	-sort the items of the list in place. key specifies a function of one argument that is used to extract a comparison key from each list element, reverse is a b		oolean value. If set tto True, then the list elements are sorted as if each comparison were reversed

-	list.reverse()
	-reverse the elements of the list in place.

-	list.copy()
	-return a shallow copy of the list. Equivalent to a[:]
